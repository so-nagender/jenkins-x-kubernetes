pipelineConfig:
  agent:
    image: nodejs
    label: oh-nodejs
  pipelines:
    pullRequest:
      pipeline:
        options:
          containerOptions:
            env:
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "2"
                memory: 2Gi
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /home/jenkins/.docker
              name: volume-0
          volumes:
          - emptyDir: {}
            name: workspace-volume
          - hostPath:
              path: /var/run/docker.sock
            name: docker-daemon
          - name: volume-0
            secret:
              secretName: jenkins-docker-cfg
        stages:
        - agent:
          image: nodejs
      build:
        steps:
        - sh: echo "PR-$PULL_NUMBER"
          name: print-version
        - sh: ls --all
          name: list-dir
        - args:
          - --cache=true
          - --cache-dir=/workspace
          - --context=/workspace/source
          - --dockerfile=/workspace/source/Dockerfile
          - --destination=${DOCKER_REGISTRY}/kubernetes/${APP_NAME}:PR-${PULL_NUMBER}
          - --cache-repo=${DOCKER_REGISTRY}/todo/cache
          - --skip-tls-verify-registry=${DOCKER_REGISTRY}
          command: /kaniko/executor
          dir: /workspace/source
          image: gcr.io/kaniko-project/executor:v0.22.0
          name: container-build
      postBuild:
        steps:
        - sh: jx step post build --image $DOCKER_REGISTRY/kubernetes/$APP_NAME:PR-$PULL_NUMBER && printenv
          name: post-build