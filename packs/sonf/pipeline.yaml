pipelines:
  post: {}
  pullRequest:
    pipeline:
      stages:
        - agent:
            image: docker.io/nagenderrawat/oh:sonf-v12
          name: pr-release
          options:
            containerOptions:
              volumeMounts:
                - mountPath: /home/jenkins
                  name: workspace-volume
                - mountPath: /var/run/docker.sock
                  name: docker-daemon
                - mountPath: /home/jenkins/.docker
                  name: volume-0
            volumes:
              - emptyDir: {}
                name: workspace-volume
              - hostPath:
                  path: /var/run/docker.sock
                name: docker-daemon
              - name: volume-0
                secret:
                  secretName: jenkins-docker-cfg
                  items:
                  - key: .dockerconfigjson
                    path: config.json
          environment:
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY_ORG
              value: "kubernetes"
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: nagender.rawat@scheduleonce.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: nagender.rawat@scheduleonce.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
          steps:
#          - sh: echo "logging started bhai-nagender..."
#            name: log-nagender
#          - sh: node -v
#            name: node-version
#          - sh: npm install
#            name: npm-install
#          - sh: CI=true DISPLAY=:99 npm test
#            name: npm-test
#          - args:
#            - --cache=true
#            - --cache-dir=/workspace
#            - --context=/workspace/source
#            - --dockerfile=/workspace/source/Dockerfile
#            - --destination=dockeronce.azurecr.io/${DOCKER_REGISTRY_ORG}/${APP_NAME}:PR-${PULL_NUMBER}
#            - --cache-repo=dockeronce.azurecr.io/todo/cache
#            - --skip-tls-verify-registry=dockeronce.azurecr.io
#            command: /kaniko/executor
#            image: gcr.io/kaniko-project/executor:v1.0.0
#            name: build
#          - name: eval-tag
#            image: alpine:3.7
#            command: /bin/sh
#            args:
#            - -c
#            - |
#              /bin/sh <<'EOF'
#
#              # Normal script content possible here
#              echo "Hello world"
#              ls -l
#              exit 123
#
#              EOF
          - name: eval-tag
            image: groovy
            command: groovy
            args:
            - -c
            - |
              groovy <<'EOF'

              println "Hello world"

              EOF
