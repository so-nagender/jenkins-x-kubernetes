agent:
  label: jenkins-machine-learning-gpu
  container: machine-learning-gpu
pipelines:
  pullRequest:
    pipeline:
      agent:
        image:
          machine-learning-gpu
      stages:
      - name: build
        steps:
        - sh: source /root/.bashrc && flake8
          name: flake8
        - sh: source /root/.bashrc && pytest
          name: testing
        - sh: source /root/.bashrc && python3 -m pip install -r ./requirements.txt && python3 app.py
          name: training
  release:
    pipeline:
      agent:
        image:
          machine-learning-gpu
      stages:
      - name: prepare
        steps:
        - sh: git checkout master
        - sh: git config --global credential.helper store
        - sh: jx step git credentials
        - sh: echo $(jx-release-version) > VERSION
        - sh: jx step tag --version $(cat VERSION)
      - name: build
        steps:
        - sh: source /root/.bashrc && flake8
          name: flake8
      - name: training
        steps:
        - sh: source /root/.bashrc && python3 -m pip install -r ./requirements.txt && python3 app.py
          name: training
        options:
          containerOptions:
            resources:
              limits:
                cpu: 4
                memory: 4Gi
                nvidia.com/gpu: 1
              requests:
                cpu: 0.5
                memory: 2Gi
                nvidia.com/gpu: 1
      - name: export
        steps:
        - sh: >
              source /root/.bashrc &&
              export TARGET_SERVICE=`echo $APP_NAME | sed -Ee s/-training$/-service/` &&
              export GIT_PROVIDER=`jx repo -qub | grep -oP '(^https?:\/\/[a-zA-Z\d-\.]+)'` &&
              export TARGET_SERVICE_REPO=`echo $GIT_PROVIDER/$REPO_OWNER/$TARGET_SERVICE` &&
              git clone $TARGET_SERVICE_REPO &&
              cd $TARGET_SERVICE &&
              git checkout syncmodel || git checkout -b syncmodel &&
              git lfs install &&
              git lfs track '*.onnx' &&
              cp ../*.onnx . &&
              cp -r ../metrics . &&
              git add *.onnx metrics &&
              { jx create pullrequest --push -b --title 'New model trained' --body 'feat: New model trained' || echo 'Using previous PR'; } &&
              sha1sum *.onnx >&2
          name: export-model

